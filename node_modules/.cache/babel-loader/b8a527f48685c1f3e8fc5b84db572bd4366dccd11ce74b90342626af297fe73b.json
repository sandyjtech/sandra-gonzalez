{"ast":null,"code":"var _jsxFileName = \"/home/sandyjtech/Development/my-projects/sandra-gonzalez/src/pages/Blogs/Blogs.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './Blogs.css'; // Import the CSS file\nimport { FaTrash, FaPencilAlt } from 'react-icons/fa';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Blogs = () => {\n  _s();\n  // Sample blog data (you can replace this with your actual blog data)\n  const blogs = [{\n    id: 1,\n    title: 'Blog Title 1',\n    content: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit...'\n  }, {\n    id: 2,\n    title: 'Blog Title 2',\n    content: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit...'\n  }\n  // Add more blog entries here\n  ];\n\n  // State for managing comments and likes\n  const [comments, setComments] = useState([]);\n  const [likes, setLikes] = useState({});\n\n  // State for tracking the visibility of the comment section\n  const [isCommentSectionVisible, setIsCommentSectionVisible] = useState(false);\n  const [commentText, setCommentText] = useState(''); // State to store comment text\n\n  // Function to add a new comment\n  const addComment = (blogId, commentText) => {\n    // Create a new comment object\n    const newComment = {\n      id: Math.random(),\n      // You can generate a unique ID using a library or a backend service later\n      blogId,\n      text: commentText,\n      likes: 0 // Initialize likes to 0\n    };\n\n    // Add the new comment to the comments array\n    setComments([...comments, newComment]);\n  };\n\n  // Function to handle liking a comment\n  const handleLike = commentId => {\n    // Update the likes for the given comment\n    setLikes({\n      ...likes,\n      [commentId]: (likes[commentId] || 0) + 1 // Increment the likes count\n    });\n  };\n\n  // Function to delete a comment\n  const deleteComment = commentId => {\n    // Filter out the comment with the given ID\n    const updatedComments = comments.filter(comment => comment.id !== commentId);\n\n    // Update the comments state\n    setComments(updatedComments);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"blogs-container\",\n    children: blogs.map(blog => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"blog\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: blog.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: blog.content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"comment-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Comments\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: comments.filter(comment => comment.blogId === blog.id).map(comment => /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"comment\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"comment-content\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: comment.text\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"like-count\",\n                children: [\"Likes: \", likes[comment.id] || 0]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"comment-buttons\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => deleteComment(comment.id),\n                children: [/*#__PURE__*/_jsxDEV(FaTrash, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 82,\n                  columnNumber: 25\n                }, this), \" Delete\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 81,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleLike(comment.id),\n                children: \"\\uD83D\\uDC4D\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                children: [\"Edit \", /*#__PURE__*/_jsxDEV(FaPencilAlt, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 85,\n                  columnNumber: 36\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 21\n            }, this)]\n          }, comment.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: e => {\n            e.preventDefault();\n            const commentText = e.target.commentText.value;\n            addComment(blog.id, commentText);\n            e.target.commentText.value = ''; // Clear the input field\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"commentText\",\n            placeholder: \"Add a comment\",\n            className: \"comment-input\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"comment-button\",\n            children: \"Post\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this)]\n    }, blog.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n};\n_s(Blogs, \"HwiBFOB3kZf2l3RQQactsNKNa+s=\");\n_c = Blogs;\nexport default Blogs;\nvar _c;\n$RefreshReg$(_c, \"Blogs\");","map":{"version":3,"names":["React","useState","FaTrash","FaPencilAlt","jsxDEV","_jsxDEV","Blogs","_s","blogs","id","title","content","comments","setComments","likes","setLikes","isCommentSectionVisible","setIsCommentSectionVisible","commentText","setCommentText","addComment","blogId","newComment","Math","random","text","handleLike","commentId","deleteComment","updatedComments","filter","comment","className","children","map","blog","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onSubmit","e","preventDefault","target","value","type","name","placeholder","_c","$RefreshReg$"],"sources":["/home/sandyjtech/Development/my-projects/sandra-gonzalez/src/pages/Blogs/Blogs.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './Blogs.css'; // Import the CSS file\nimport { FaTrash, FaPencilAlt } from 'react-icons/fa';\n\nconst Blogs = () => {\n  // Sample blog data (you can replace this with your actual blog data)\n  const blogs = [\n    {\n      id: 1,\n      title: 'Blog Title 1',\n      content: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit...',\n    },\n    {\n      id: 2,\n      title: 'Blog Title 2',\n      content: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit...',\n    },\n    // Add more blog entries here\n  ];\n\n // State for managing comments and likes\n const [comments, setComments] = useState([]);\n const [likes, setLikes] = useState({});\n \n // State for tracking the visibility of the comment section\n const [isCommentSectionVisible, setIsCommentSectionVisible] = useState(false);\n const [commentText, setCommentText] = useState(''); // State to store comment text\n\n  // Function to add a new comment\n  const addComment = (blogId, commentText) => {\n    // Create a new comment object\n    const newComment = {\n      id: Math.random(), // You can generate a unique ID using a library or a backend service later\n      blogId,\n      text: commentText,\n      likes: 0, // Initialize likes to 0\n    };\n\n    // Add the new comment to the comments array\n    setComments([...comments, newComment]);\n  };\n\n  // Function to handle liking a comment\n  const handleLike = (commentId) => {\n    // Update the likes for the given comment\n    setLikes({\n      ...likes,\n      [commentId]: (likes[commentId] || 0) + 1, // Increment the likes count\n    });\n  };\n\n  // Function to delete a comment\n  const deleteComment = (commentId) => {\n    // Filter out the comment with the given ID\n    const updatedComments = comments.filter((comment) => comment.id !== commentId);\n\n    // Update the comments state\n    setComments(updatedComments);\n  };\n\n  return (\n    <div className=\"blogs-container\">\n      {blogs.map((blog) => (\n        <div key={blog.id} className=\"blog\">\n          <h2>{blog.title}</h2>\n          <p>{blog.content}</p>\n\n          {/* Comment section */}\n          <div className=\"comment-section\">\n            <h3>Comments</h3>\n            <ul>\n              {comments\n                .filter((comment) => comment.blogId === blog.id)\n                .map((comment) => (\n                  <li key={comment.id} className=\"comment\">\n                    <div className=\"comment-content\">\n                      <p>{comment.text}</p>\n                      <span className=\"like-count\">Likes: {likes[comment.id] || 0}</span>\n                    </div>\n                    <div className=\"comment-buttons\">\n                      <button onClick={() => deleteComment(comment.id)}>\n                        <FaTrash /> Delete\n                      </button>\n                      <button onClick={() => handleLike(comment.id)}>👍</button>\n                      <button>Edit <FaPencilAlt /></button>\n                    </div>\n                  </li>\n                ))}\n            </ul>\n            <form\n              onSubmit={(e) => {\n                e.preventDefault();\n                const commentText = e.target.commentText.value;\n                addComment(blog.id, commentText);\n                e.target.commentText.value = ''; // Clear the input field\n              }}\n            >\n              <input type=\"text\" name=\"commentText\" placeholder=\"Add a comment\" className=\"comment-input\" />\n              <button type=\"submit\" className=\"comment-button\">Post</button>\n            </form>\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default Blogs;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}