{"ast":null,"code":"var _jsxFileName = \"/home/sandyjtech/Development/my-projects/sandra-gonzalez/src/pages/Contact/InstantChat.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './InstantChat.css'; // Import your CSS for styling\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst InstantChat = () => {\n  _s();\n  // State to manage chat messages\n  const [chatMessages, setChatMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState('');\n\n  // Function to handle sending a chat message\n  const sendMessage = () => {\n    // Implement the logic to send a message (backend).\n    // Update the chatMessages state with the sent message.\n    // You can use a backend service or library like Socket.io or Firebase for real-time chat.\n    // For this example, we'll simulate adding a message locally.\n    if (newMessage.trim() !== '') {\n      setChatMessages([...chatMessages, newMessage]);\n      setNewMessage('');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"instant-chat-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Instant Chat\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-messages\",\n      children: chatMessages.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"message\",\n        children: message\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-input\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Type your message...\",\n        value: newMessage,\n        onChange: e => setNewMessage(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: sendMessage,\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n_s(InstantChat, \"w48rL5qvYaCnmtb9RHS1ISMEV/w=\");\n_c = InstantChat;\nexport default InstantChat;\nvar _c;\n$RefreshReg$(_c, \"InstantChat\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","InstantChat","_s","chatMessages","setChatMessages","newMessage","setNewMessage","sendMessage","trim","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","message","index","type","placeholder","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["/home/sandyjtech/Development/my-projects/sandra-gonzalez/src/pages/Contact/InstantChat.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './InstantChat.css'; // Import your CSS for styling\n\nconst InstantChat = () => {\n  // State to manage chat messages\n  const [chatMessages, setChatMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState('');\n\n  // Function to handle sending a chat message\n  const sendMessage = () => {\n    // Implement the logic to send a message (backend).\n    // Update the chatMessages state with the sent message.\n    // You can use a backend service or library like Socket.io or Firebase for real-time chat.\n    // For this example, we'll simulate adding a message locally.\n    if (newMessage.trim() !== '') {\n      setChatMessages([...chatMessages, newMessage]);\n      setNewMessage('');\n    }\n  };\n\n  return (\n    <div className=\"instant-chat-container\">\n      <h2>Instant Chat</h2>\n      <div className=\"chat-messages\">\n        {chatMessages.map((message, index) => (\n          <div key={index} className=\"message\">\n            {message}\n          </div>\n        ))}\n      </div>\n      <div className=\"chat-input\">\n        <input\n          type=\"text\"\n          placeholder=\"Type your message...\"\n          value={newMessage}\n          onChange={(e) => setNewMessage(e.target.value)}\n        />\n        <button onClick={sendMessage}>Send</button>\n      </div>\n    </div>\n  );\n};\n\nexport default InstantChat;\n\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,mBAAmB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE5B,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB;EACA,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACO,UAAU,EAAEC,aAAa,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;;EAEhD;EACA,MAAMS,WAAW,GAAGA,CAAA,KAAM;IACxB;IACA;IACA;IACA;IACA,IAAIF,UAAU,CAACG,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;MAC5BJ,eAAe,CAAC,CAAC,GAAGD,YAAY,EAAEE,UAAU,CAAC,CAAC;MAC9CC,aAAa,CAAC,EAAE,CAAC;IACnB;EACF,CAAC;EAED,oBACEN,OAAA;IAAKS,SAAS,EAAC,wBAAwB;IAAAC,QAAA,gBACrCV,OAAA;MAAAU,QAAA,EAAI;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACrBd,OAAA;MAAKS,SAAS,EAAC,eAAe;MAAAC,QAAA,EAC3BP,YAAY,CAACY,GAAG,CAAC,CAACC,OAAO,EAAEC,KAAK,kBAC/BjB,OAAA;QAAiBS,SAAS,EAAC,SAAS;QAAAC,QAAA,EACjCM;MAAO,GADAC,KAAK;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEV,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eACNd,OAAA;MAAKS,SAAS,EAAC,YAAY;MAAAC,QAAA,gBACzBV,OAAA;QACEkB,IAAI,EAAC,MAAM;QACXC,WAAW,EAAC,sBAAsB;QAClCC,KAAK,EAAEf,UAAW;QAClBgB,QAAQ,EAAGC,CAAC,IAAKhB,aAAa,CAACgB,CAAC,CAACC,MAAM,CAACH,KAAK;MAAE;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChD,CAAC,eACFd,OAAA;QAAQwB,OAAO,EAAEjB,WAAY;QAAAG,QAAA,EAAC;MAAI;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACZ,EAAA,CAtCID,WAAW;AAAAwB,EAAA,GAAXxB,WAAW;AAwCjB,eAAeA,WAAW;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}