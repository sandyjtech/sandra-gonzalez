{"ast":null,"code":"var _jsxFileName = \"/home/sandyjtech/Development/my-projects/sandra-gonzalez/src/pages/Blogs/Blogs.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './Blogs.css'; // Import the CSS file\nimport { FaTrash, FaPencilAlt } from 'react-icons/fa';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Blogs = () => {\n  _s();\n  // Sample blog data (you can replace this with your actual blog data)\n  const blogs = [{\n    id: 1,\n    title: 'Blog Title 1',\n    content: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit...'\n  }, {\n    id: 2,\n    title: 'Blog Title 2',\n    content: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit...'\n  }\n  // Add more blog entries here\n  ];\n\n  // State for managing comments and likes\n  const [comments, setComments] = useState([]);\n  const [likes, setLikes] = useState({}); // Object to store likes for each comment\n\n  // State to track the visibility of the comment section for each blog\n  const [commentSectionVisibility, setCommentSectionVisibility] = useState({});\n\n  // State to track the comment being edited\n  const [editingComment, setEditingComment] = useState(null);\n\n  // Function to add a new comment\n  const addComment = (blogId, commentText) => {\n    // Create a new comment object\n    const newComment = {\n      id: Math.random(),\n      // You can generate a unique ID using a library or a backend service later\n      blogId,\n      text: commentText,\n      likes: 0 // Initialize likes to 0\n    };\n\n    // Add the new comment to the comments array\n    setComments([...comments, newComment]);\n  };\n\n  // Function to handle liking a comment\n  const handleLike = commentId => {\n    // Update the likes for the given comment\n    setLikes({\n      ...likes,\n      [commentId]: (likes[commentId] || 0) + 1 // Increment the likes count\n    });\n  };\n\n  // Function to delete a comment\n  const deleteComment = commentId => {\n    // Filter out the comment with the given ID\n    const updatedComments = comments.filter(comment => comment.id !== commentId);\n\n    // Update the comments state\n    setComments(updatedComments);\n  };\n\n  // Function to toggle the comment section visibility for a specific blog\n  const toggleCommentSection = blogId => {\n    setCommentSectionVisibility({\n      ...commentSectionVisibility,\n      [blogId]: !commentSectionVisibility[blogId]\n    });\n  };\n\n  // Function to set the comment being edited\n  const startEditComment = commentId => {\n    setEditingComment(commentId);\n  };\n\n  // Function to save the edited comment\n  const saveEditedComment = (commentId, newText) => {\n    const updatedComments = comments.map(comment => {\n      if (comment.id === commentId) {\n        return {\n          ...comment,\n          text: newText\n        };\n      }\n      return comment;\n    });\n    setComments(updatedComments);\n    setEditingComment(null);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"blogs-container\",\n    children: blogs.map(blog => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"blog\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: blog.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: blog.content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"comment-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Comments\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: comments.filter(comment => comment.blogId === blog.id).map(comment => /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"comment\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"comment-content\",\n              children: [editingComment === comment.id ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n                  value: comment.text,\n                  onChange: e => {\n                    const newText = e.target.value;\n                    saveEditedComment(comment.id, newText);\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 107,\n                  columnNumber: 27\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => saveEditedComment(comment.id, comment.text),\n                  children: \"Save\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 114,\n                  columnNumber: 27\n                }, this)]\n              }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {\n                children: comment.text\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 117,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"like-count\",\n                children: [\"Likes: \", likes[comment.id] || 0]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 119,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"comment-buttons\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => deleteComment(comment.id),\n                children: [/*#__PURE__*/_jsxDEV(FaTrash, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 123,\n                  columnNumber: 25\n                }, this), \" Delete\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 122,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleLike(comment.id),\n                children: \"\\uD83D\\uDC4D\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 125,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => startEditComment(comment.id),\n                children: /*#__PURE__*/_jsxDEV(FaPencilAlt, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 126,\n                  columnNumber: 76\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 126,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 21\n            }, this)]\n          }, comment.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => toggleCommentSection(blog.id),\n          className: \"comment-button\",\n          children: commentSectionVisibility[blog.id] ? 'Hide' : 'Comment'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 13\n        }, this), commentSectionVisibility[blog.id] && /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: e => {\n            e.preventDefault();\n            const commentText = e.target.commentText.value;\n            addComment(blog.id, commentText);\n            e.target.commentText.value = ''; // Clear the input field\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"commentText\",\n            placeholder: \"Add a comment\",\n            className: \"comment-input\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"comment-button\",\n            children: \"Add\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 11\n      }, this)]\n    }, blog.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 5\n  }, this);\n};\n_s(Blogs, \"amhHX79WLmvtAdN+VlXeHNxjpRg=\");\n_c = Blogs;\nexport default Blogs;\nvar _c;\n$RefreshReg$(_c, \"Blogs\");","map":{"version":3,"names":["React","useState","FaTrash","FaPencilAlt","jsxDEV","_jsxDEV","Fragment","_Fragment","Blogs","_s","blogs","id","title","content","comments","setComments","likes","setLikes","commentSectionVisibility","setCommentSectionVisibility","editingComment","setEditingComment","addComment","blogId","commentText","newComment","Math","random","text","handleLike","commentId","deleteComment","updatedComments","filter","comment","toggleCommentSection","startEditComment","saveEditedComment","newText","map","className","children","blog","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","onClick","onSubmit","preventDefault","type","name","placeholder","_c","$RefreshReg$"],"sources":["/home/sandyjtech/Development/my-projects/sandra-gonzalez/src/pages/Blogs/Blogs.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './Blogs.css'; // Import the CSS file\nimport { FaTrash, FaPencilAlt } from 'react-icons/fa';\n\nconst Blogs = () => {\n  // Sample blog data (you can replace this with your actual blog data)\n  const blogs = [\n    {\n      id: 1,\n      title: 'Blog Title 1',\n      content: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit...',\n    },\n    {\n      id: 2,\n      title: 'Blog Title 2',\n      content: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit...',\n    },\n    // Add more blog entries here\n  ];\n\n  // State for managing comments and likes\n  const [comments, setComments] = useState([]);\n  const [likes, setLikes] = useState({}); // Object to store likes for each comment\n\n  // State to track the visibility of the comment section for each blog\n  const [commentSectionVisibility, setCommentSectionVisibility] = useState({});\n\n  // State to track the comment being edited\n  const [editingComment, setEditingComment] = useState(null);\n\n  // Function to add a new comment\n  const addComment = (blogId, commentText) => {\n    // Create a new comment object\n    const newComment = {\n      id: Math.random(), // You can generate a unique ID using a library or a backend service later\n      blogId,\n      text: commentText,\n      likes: 0, // Initialize likes to 0\n    };\n\n    // Add the new comment to the comments array\n    setComments([...comments, newComment]);\n  };\n\n  // Function to handle liking a comment\n  const handleLike = (commentId) => {\n    // Update the likes for the given comment\n    setLikes({\n      ...likes,\n      [commentId]: (likes[commentId] || 0) + 1, // Increment the likes count\n    });\n  };\n\n  // Function to delete a comment\n  const deleteComment = (commentId) => {\n    // Filter out the comment with the given ID\n    const updatedComments = comments.filter((comment) => comment.id !== commentId);\n\n    // Update the comments state\n    setComments(updatedComments);\n  };\n\n  // Function to toggle the comment section visibility for a specific blog\n  const toggleCommentSection = (blogId) => {\n    setCommentSectionVisibility({\n      ...commentSectionVisibility,\n      [blogId]: !commentSectionVisibility[blogId],\n    });\n  };\n\n  // Function to set the comment being edited\n  const startEditComment = (commentId) => {\n    setEditingComment(commentId);\n  };\n\n  // Function to save the edited comment\n  const saveEditedComment = (commentId, newText) => {\n    const updatedComments = comments.map((comment) => {\n      if (comment.id === commentId) {\n        return { ...comment, text: newText };\n      }\n      return comment;\n    });\n\n    setComments(updatedComments);\n    setEditingComment(null);\n  };\n\n  return (\n    <div className=\"blogs-container\">\n      {blogs.map((blog) => (\n        <div key={blog.id} className=\"blog\">\n          <h2>{blog.title}</h2>\n          <p>{blog.content}</p>\n\n          {/* Comment section */}\n          <div className=\"comment-section\">\n            <h3>Comments</h3>\n            <ul>\n              {comments\n                .filter((comment) => comment.blogId === blog.id)\n                .map((comment) => (\n                  <li key={comment.id} className=\"comment\">\n                    <div className=\"comment-content\">\n                      {editingComment === comment.id ? (\n                        <>\n                          <textarea\n                            value={comment.text}\n                            onChange={(e) => {\n                              const newText = e.target.value;\n                              saveEditedComment(comment.id, newText);\n                            }}\n                          />\n                          <button onClick={() => saveEditedComment(comment.id, comment.text)}>Save</button>\n                        </>\n                      ) : (\n                        <p>{comment.text}</p>\n                      )}\n                      <span className=\"like-count\">Likes: {likes[comment.id] || 0}</span>\n                    </div>\n                    <div className=\"comment-buttons\">\n                      <button onClick={() => deleteComment(comment.id)}>\n                        <FaTrash /> Delete\n                      </button>\n                      <button onClick={() => handleLike(comment.id)}>👍</button>\n                      <button onClick={() => startEditComment(comment.id)}><FaPencilAlt /></button>\n                    </div>\n                  </li>\n                ))}\n            </ul>\n\n            {/* Add a Comment button to toggle the comment section */}\n            <button\n              onClick={() => toggleCommentSection(blog.id)}\n              className=\"comment-button\"\n            >\n              {commentSectionVisibility[blog.id] ? 'Hide' : 'Comment'}\n            </button>\n            {commentSectionVisibility[blog.id] && (\n              <form\n                onSubmit={(e) => {\n                  e.preventDefault();\n                  const commentText = e.target.commentText.value;\n                  addComment(blog.id, commentText);\n                  e.target.commentText.value = ''; // Clear the input field\n                }}\n              >\n                <input type=\"text\" name=\"commentText\" placeholder=\"Add a comment\" className=\"comment-input\" />\n                <button type=\"submit\" className=\"comment-button\">Add</button>\n              </form>\n            )}\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default Blogs;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}