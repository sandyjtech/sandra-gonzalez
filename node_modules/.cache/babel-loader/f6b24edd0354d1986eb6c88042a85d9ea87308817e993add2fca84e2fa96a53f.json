{"ast":null,"code":"var _jsxFileName = \"/home/sandyjtech/Development/my-projects/sandra-gonzalez/src/pages/Blogs/Blogs.js\",\n  _s = $RefreshSig$();\n// Blogs.js\nimport React, { useState } from 'react';\nimport './Blogs.css'; // Import the CSS file\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Blogs = () => {\n  _s();\n  const [blogs, setBlogs] = useState([\n    // Define your blog data here\n  ]);\n  const [comments, setComments] = useState([\n    // Define your comments data here\n  ]);\n  const [likes, setLikes] = useState({});\n  const addComment = (blogId, text) => {\n    // Implement the logic to add a comment (similar to your existing code)\n  };\n  const deleteComment = commentId => {\n    // Implement the logic to delete a comment (similar to your existing code)\n  };\n  const updateComment = (commentId, text) => {\n    // Implement the logic to update a comment\n  };\n  const handleLike = blogId => {\n    // Implement the logic to handle likes for the entire blog\n    // You can use the 'likes' state to keep track of likes for each blog\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"blogs-container\",\n    children: blogs.map(blog => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"blog\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: blog.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: blog.content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleLike(blog.id),\n        children: \"\\uD83D\\uDC4D Like\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"comment-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Comments\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: comments.filter(comment => comment.blogId === blog.id).map(comment => /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"comment\",\n            children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n              value: comment.text,\n              onChange: e => {\n                const updatedText = e.target.value;\n                updateComment(comment.id, updatedText);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => deleteComment(comment.id),\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"like-count\",\n              children: [\"Likes: \", likes[comment.id] || 0]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleLike(comment.id),\n              children: \"\\uD83D\\uDC4D\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 21\n            }, this)]\n          }, comment.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: e => {\n            e.preventDefault();\n            const commentText = e.target.commentText.value;\n            addComment(blog.id, commentText);\n            e.target.commentText.value = ''; // Clear the input field\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"commentText\",\n            placeholder: \"Add a comment\",\n            className: \"comment-input\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"comment-button\",\n            children: \"Post\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this)]\n    }, blog.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n_s(Blogs, \"sTqZpwyuLoqHZnjph1Z771ff3JY=\");\n_c = Blogs;\nexport default Blogs;\nvar _c;\n$RefreshReg$(_c, \"Blogs\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Blogs","_s","blogs","setBlogs","comments","setComments","likes","setLikes","addComment","blogId","text","deleteComment","commentId","updateComment","handleLike","className","children","map","blog","title","fileName","_jsxFileName","lineNumber","columnNumber","content","onClick","id","filter","comment","value","onChange","e","updatedText","target","onSubmit","preventDefault","commentText","type","name","placeholder","_c","$RefreshReg$"],"sources":["/home/sandyjtech/Development/my-projects/sandra-gonzalez/src/pages/Blogs/Blogs.js"],"sourcesContent":["// Blogs.js\nimport React, { useState } from 'react';\nimport './Blogs.css'; // Import the CSS file\n\nconst Blogs = () => {\n  const [blogs, setBlogs] = useState([\n    // Define your blog data here\n  ]);\n\n  const [comments, setComments] = useState([\n    // Define your comments data here\n  ]);\n\n  const [likes, setLikes] = useState({});\n\n  const addComment = (blogId, text) => {\n    // Implement the logic to add a comment (similar to your existing code)\n  };\n\n  const deleteComment = (commentId) => {\n    // Implement the logic to delete a comment (similar to your existing code)\n  };\n\n  const updateComment = (commentId, text) => {\n    // Implement the logic to update a comment\n  };\n\n  const handleLike = (blogId) => {\n    // Implement the logic to handle likes for the entire blog\n    // You can use the 'likes' state to keep track of likes for each blog\n  };\n\n  return (\n    <div className=\"blogs-container\">\n      {blogs.map((blog) => (\n        <div key={blog.id} className=\"blog\">\n          <h2>{blog.title}</h2>\n          <p>{blog.content}</p>\n\n          {/* Like button for the entire blog */}\n          <button onClick={() => handleLike(blog.id)}>üëç Like</button>\n\n          {/* Comment section */}\n          <div className=\"comment-section\">\n            <h3>Comments</h3>\n            <ul>\n              {comments\n                .filter((comment) => comment.blogId === blog.id)\n                .map((comment) => (\n                  <li key={comment.id} className=\"comment\">\n                    <textarea\n                      value={comment.text}\n                      onChange={(e) => {\n                        const updatedText = e.target.value;\n                        updateComment(comment.id, updatedText);\n                      }}\n                    />\n                    <button onClick={() => deleteComment(comment.id)}>Delete</button>\n                    <span className=\"like-count\">Likes: {likes[comment.id] || 0}</span>\n                    <button onClick={() => handleLike(comment.id)}>üëç</button>\n                  </li>\n                ))}\n            </ul>\n            <form\n              onSubmit={(e) => {\n                e.preventDefault();\n                const commentText = e.target.commentText.value;\n                addComment(blog.id, commentText);\n                e.target.commentText.value = ''; // Clear the input field\n              }}\n            >\n              <input type=\"text\" name=\"commentText\" placeholder=\"Add a comment\" className=\"comment-input\" />\n              <button type=\"submit\" className=\"comment-button\">\n                Post\n              </button>\n            </form>\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default Blogs;\n\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}